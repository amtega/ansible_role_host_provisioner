---
# Configure provisioned hosts

- include_tasks: backends/vmware/nics.yml
  when: hostvars.localhost.host_provisioner_vmware_server is defined

- name: Pause before applying ansible roles
  pause:
    seconds: "{{ host_provisioner_before_ansible_pause }}"

- name: Apply roles to provisioned hosts
  include_role:
    name: "{{ host_provisioner_role }}"
    public: yes
  loop: "{{ host_provisioner_roles_mandatory }}"
  loop_control:
    loop_var: host_provisioner_role
  vars:
    iptables_load_from_hostvars: no
    iptables_zones:
      - name: "{{ host_provisioner_iptables_ssh_zone }}"
        interfaces:
          - "{{ ansible_facts.default_ipv4.interface }}"
          - "{{ host_provisioner_iptables_ssh_interface }}"
    iptables_services:
      - name: ssh
        ports: "{{ sshd_port | default(22) }}"
        zones: "{{ host_provisioner_iptables_ssh_zone }}"
    iptables_input_raw_rules:
      - "-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT"
      - "-A INPUT -p icmp -m state --state RELATED -j ACCEPT"
      - "-A INPUT -p icmp -m icmp --icmp-type 4 -j ACCEPT"
      - "-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT"
      - "-A INPUT -p icmp -j DROP"
    sshd_reload: no
    sshd_restart: no
    network_interfaces: >-
      {{ hostvars.localhost.host_provisioner_vmware_nics
         [inventory_hostname] }}
    reboot_disable: yes

- name: Pause after applying ansible roles
  pause:
    seconds: "{{ host_provisioner_after_ansible_pause }}"

- name: Release dhcp address
  command: dhclient -r
  changed_when: yes

- name: Halt provisioned hosts
  command: shutdown -h now 'Ansible triggered a halt'
  async: 1
  poll: 0
  changed_when: true
  ignore_errors: true
